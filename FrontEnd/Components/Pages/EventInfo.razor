@page "/event/{eventid}"
@using frontend.Clients
@using frontend.Models
@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject EventClient EventClient
@inject UserClient UserClient

<PageTitle>Event</PageTitle>

@if (CurrentEvent is null)
{
    <p
        style="font-size: 20px; color: #a91215; font-family: 'Poppins'; text-align: center; margin-bottom: 100px; margin-top: -25px;">
        No any tickets available.
    </p>
}
else
{
    <style>
        * {
            box-sizing: border-box;
        }

        .topContainer {
            background-image: url("@CurrentEvent.EventImage");
            background-size: cover;
            background-position: center;
            position: relative;
            overflow: hidden;
        }

        .topContainer::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: inherit;
            filter: blur(5px);
            transform: scale(1.1);
            /* Prevents blurred edges */
        }


        .bookNowBtn {
            transition: 0.3s ease;
        }

        .bookNowBtn:hover {
            background-color: #cb1518 !important;
        }
    </style>

    <div class="topContainer d-flex" style="width: 100%; height: 245px; background-color: #d9d9d9;">
    </div>
    <div style="background-color: white; z-index: 2; position: relative;">
        <div class="container mb-5" style=" ">
            <div class="row">
                <div class="col-5">
                    <center style="margin-top: -150px;">
                        <img src="@CurrentEvent.EventImage" width="425px" alt="">
                    </center>
                </div>
                <div class="col">
                    <p class="fw-bold" style="font-size: 40px; color: #a91215;">@CurrentEvent.EventName</p>
                    <div class="d-flex" style="gap: 32px;">
                        <div class="d-flex align-items-center my-2">
                            <img src="Assets/Calendar.png" width="24px" height="24px" alt="" />
                            <p class="text-danger fw-semibold ps-2 m-0">@CurrentEvent.EventDate</p>
                        </div>
                        <div class="d-flex align-items-center my-2">
                            <img src="Assets/Square Clock.png" width="24px" height="24px" alt="" />
                            <p class="text-danger fw-semibold ps-2 m-0">@CurrentEvent.EventTime</p>
                        </div>
                        <div class="d-flex align-items-center">
                            <img src="Assets/Location.png" width="24px" height="24px" alt="" />
                            <p class="ps-2 m-0 text-danger">
                                @CurrentEvent.EventLocation
                            </p>
                        </div>
                    </div>
                    <div class="d-flex mt-5" style="gap: 5px;">
                        <a class="btn fw-semibold bookNowBtn" href="/checkout/@EventId"
                            style="width: 100%; height: 40px; background-color: #a91215; color: white;">
                            <div class="d-flex px-3" style="justify-content: space-between;">
                                <p>LKR @CurrentEvent.EventTicketPrice .00<small style="font-weight: 500; font-size: 10px;"> ( per
                                        person )</small></p>
                                <p>Book Now</p>
                            </div>
                        </a>
                        <img src="Assets/Logo_half_transparent.png"
                            style="height: 40px;margin-bottom: 10px; margin-right: 18px; " />
                    </div>
                </div>
            </div>
            <p class="fw-bold mt-3" style="font-size: 40px; color: #a91215;">Description</p>
            <p style="font-size: 16px; color: #000000;">@CurrentEvent.EventDescription</p>

        </div>
    </div>
}


@code {
    [Parameter]
    public string? EventId { get; set; }
    private EventResponce? CurrentEvent;
    protected override async Task OnInitializedAsync()
    {
        if (EventId is null)
        {
            toastService.ShowError("Unauthorized access. Please log in again.");
            NavigationManager.NavigateTo("/");
        }
        else
        {
            try
            {
                CurrentEvent = await EventClient.GetEventInfo(int.Parse(EventId));
            }
            catch (Exception)
            {
                toastService.ShowError("Somthing went wrong. Please try again.");
                NavigationManager.NavigateTo("/");
            }
        }
    }

}
