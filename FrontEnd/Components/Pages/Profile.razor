@page "/profile"
@using Microsoft.Extensions.Logging
@using frontend.Clients
@using frontend.Components.index
@using frontend.Models
@inject UserClient UserClient
@inject IToastService toastService
@inject NavigationManager NavigationManager

<PageTitle>Profile</PageTitle>


<div class="container mt-5">
    <div class="d-flex" style="justify-content: space-between;">
        @if (user is null)
        {
            <p class="col-md-2 fw-semibold" style="color: #a91215;">Loading...</p>
        }
        else
        {

            <p class="fw-bold" style="font-size: 32px; color: #a91215;">Hey, @user.User!.FirstName</p>
        }
        <a class="btn fw-bold loginBtn" href="/logout"
            @onclick="@(()=>toastService.ShowInfo("Logged out successfully!"))"
            style="width: 144px; height: 40px; position: relative; z-index: 2; margin-bottom: 10px; background-color: #a91215; color: white;">Logout</a>
    </div>
    <p class="fw-bold" style="font-size: 24px; color: #a91215;">Profile details</p>
    @if (user is null)
    {
        <p class="col-md-2 fw-semibold" style="color: #a91215;">Loading...</p>
    }
    else
    {
        <div class="row">
            <p class="col-md-2 fw-semibold" style="color: #a91215;">First Name</p>
            <p class="col fw-semibold" style="color: #0000008d;">@user.User!.FirstName</p>
        </div>
        <div class="row" style="margin-top: -10px;">
            <p class="col-md-2 fw-semibold" style="color: #a91215;">Last Name</p>
            <p class="col fw-semibold" style="color: #0000008d;">@user.User!.LastName</p>
        </div>
        <div class="row" style="margin-top: -10px;">
            <p class="col-md-2 fw-semibold" style="color: #a91215;">NIC</p>
            <p class="col fw-semibold" style="color: #0000008d;">@user.User!.Nic</p>
        </div>
        <div class="row" style="margin-top: -10px;">
            <p class="col-md-2 fw-semibold" style="color: #a91215;">Contact number</p>
            <p class="col fw-semibold" style="color: #0000008d;">@user.User!.PhoneNumber</p>
        </div>
        <div class="row" style="margin-top: -10px;">
            <p class="col-md-2 fw-semibold" style="color: #a91215;">Email</p>
            <p class="col fw-semibold" style="color: #0000008d;">@user.User!.Email</p>
        </div>
    }
    <p class="fw-bold mt-5" style="font-size: 24px; color: #a91215;">Booked tickets</p>
    <div class="row row-cols-1 row-cols-md-2 g-5 " style="margin-top: 75px;">
        @if (MyEvents is null)
        {
            <p
                style="font-size: 20px; color: #a91215; font-family: 'Poppins'; text-align: center; margin-bottom: 100px; margin-top: -25px;">
                No any tickets available.
            </p>
        }
        else
        {
            @foreach (var MyEvent in MyEvents)
            {
                <div class="col">
                    <EventCard IsEventPreview=true EventName=@MyEvent.EventName Date=@MyEvent.EventDate Time=@MyEvent.EventTime
                        Location=@MyEvent.EventLocation CardImgUrl=@MyEvent.EventImage EventId=@MyEvent.EventId />
                </div>
            }
        }
    </div>
</div>



<img src="Assets/Logo_background_t.png" style="position: absolute; right: 0; top:0; z-index: 0;" width="490" alt="">

@code {
    private UserResponce? user;
    private bool IsLogged = false;
    private List<EventResponce>? MyEvents;
    private bool IsContentLoaded;
    protected override async Task OnInitializedAsync()
    {
        IsLogged = await UserClient.IsUserLogged();
        if (!IsLogged)
        {
            toastService.ShowError("Unauthorized access. Please log in again.");
            NavigationManager.NavigateTo("/");
        }
        else
        {
            try
            {
                user = await UserClient.GetUserInfo();
                MyEvents = user.Events;
                IsContentLoaded = true;
            }
            catch (Exception)
            {
                toastService.ShowError("Somthing went wrong. Please try again.");
                NavigationManager.NavigateTo("/");
            }
        }
    }


}
